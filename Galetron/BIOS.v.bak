module BIOS(clock, address, iRAMOutput);
	 input [9:0] address;
	 input clock;
	 output [31:0] iRAMOutput;
	 integer firstClock = 0;
	 reg [31:0] instructionsRAM[28:0];

	 always @ ( posedge clock ) begin
	 	 if (firstClock==0) begin
 
	 	 instructionsRAM[0] <= 32'b01101100000000000000000000000000;//Nop
	 	 instructionsRAM[1] <= 32'b01101000000000000000000000000000;//Loadi #0 to r[0]
	 	 instructionsRAM[2] <= 32'b01101010110000000000000000000101;//Loadi #5, #0 to r[22]
	 	 instructionsRAM[3] <= 32'b01101010111000000000000000000110;//Loadi #6, #0 to r[23]
	 	 instructionsRAM[4] <= 32'b01101011000000000000000000000111;//Loadi #7, #0 to r[24]
	 	 instructionsRAM[5] <= 32'b01101011001000000000000000001000;//Loadi #8, #0 to r[25]
	 	 instructionsRAM[6] <= 32'b10010101000101100000000000000000;//LoadHD m[r[22]] to r[8]
	 	 instructionsRAM[7] <= 32'b10010101001101110000000000000000;//LoadHD m[r[23]] to r[9]
	 	 instructionsRAM[8] <= 32'b10010101010110000000000000000000;//LoadHD m[r[24]] to r[10]
	 	 instructionsRAM[9] <= 32'b10010101011110010000000000000000;//LoadHD m[r[25]] to r[11]
	 	 instructionsRAM[10] <= 32'b01101000010000000000000000001111;//Loadi #15 to r[2]
	 	 instructionsRAM[11] <= 32'b01101000011000000000000001000100;//Loadi #68 to r[3]
	 	 instructionsRAM[12] <= 32'b01101000101000000000000000010101;//Loadi #21 to r[5]
	 	 instructionsRAM[13] <= 32'b01101010001000000000000000010000;//Loadi #16 to r[17]
	 	 instructionsRAM[14] <= 32'b01101010010000000000000000010001;//Loadi #17 to r[18]
	 	 instructionsRAM[15] <= 32'b01101010011000000000000000010010;//Loadi #18 to r[19]
	 	 instructionsRAM[16] <= 32'b01101010100000000000000000010011;//Loadi #19 to r[20]
	 	 instructionsRAM[17] <= 32'b10000001000000000000000000000000;//Output r[8]
	 	 instructionsRAM[18] <= 32'b10000001001000000000000000000000;//Output r[9]
	 	 instructionsRAM[19] <= 32'b10000001010000000000000000000000;//Output r[10]
	 	 instructionsRAM[20] <= 32'b10000001011000000000000000000000;//Output r[11]
	 	 instructionsRAM[21] <= 32'b10000000010000000000000000000000;//Output r[2]
	 	 instructionsRAM[22] <= 32'b10000000011000000000000000000000;//Output r[3]
	 	 instructionsRAM[23] <= 32'b10000000101000000000000000000000;//Output r[5]
	 	 instructionsRAM[24] <= 32'b10000010001000000000000000000000;//Output r[17]
	 	 instructionsRAM[25] <= 32'b10000010010000000000000000000000;//Output r[18]
	 	 instructionsRAM[26] <= 32'b10000010011000000000000000000000;//Output r[19]
	 	 instructionsRAM[27] <= 32'b10000010100000000000000000000000;//Output r[20]

	 	 firstClock <= 0;
	 	 end
	 end

	 assign iRAMOutput = instructionsRAM[address];
endmodule // BIOS