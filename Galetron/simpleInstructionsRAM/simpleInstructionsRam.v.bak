module simpleInstructionsRAM (clock, address, iRAMOutput);
  input [9:0] address;
  input clock;
  output [31:0] iRAMOutput;
  integer firstClock = 0;
  reg [31:0] instructionsRAM[1023:0];

  always @ ( posedge clock ) begin
    if (firstClock=0) begin
      instructionsRAM[0] = 32'b01101100000000000000000000000000;//nop
      instructionsRAM[1] = 32'b01101000101000000000001101000100;//ldi->reg[00101], valor 1101000100
      instructionsRAM[2] = 32'b01100100101000000000000000000111;//st(reg[00101])->M[111]
      instructionsRAM[3] = 32'b01100000011000000000000000000111;//ld(M[111])->reg[00011]
      instructionsRAM[4] = 32'b01111000011000000000000000000000;//out(reg[00011])
      instructionsRAM[5] = 32'b01111000000000000000000000000000;//hlt
      // instructionsRAM[6] =
      // instructionsRAM[7] =
    end
  end

  assign iRAMOutput = instructionsRAM[address];
endmodule // simpleInstructionsRAM
