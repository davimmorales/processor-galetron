module reset_controller (
  operation,
  resume_os,
  system_reset,
  program_counter,
  resetCPU);

  input program_reset, system_reset;
  input [5:0] operation;
  output reg resetCPU;

  localparam  [5:0]  jump = 6'b010101;
  localparam  [5:0]  jumpr = 6'b100011;
  localparam  [5:0]  pbranch = 6'b011111;
  localparam  [5:0]  branchz = 6'b010011;
  localparam  [5:0]  branchn = 6'b010100;
  localparam  [5:0]  start_system = 6'b100111;

  always @ ( * ) begin
    if (operation == start_system) begin
      resetCPU = 1;
    end
    else if (system_reset == 1 ||
        (resume_os == 1 && program_counter < 256)) begin
      case (operation)
        jump, jumpr,
        pbranch, branchz,
        branchn: begin
          resetCPU = 0;
        end
        default: resetCPU = 1;
      endcase
    end else  begin
      resetCPU = 0;
    end
  end

endmodule // reset_controller
